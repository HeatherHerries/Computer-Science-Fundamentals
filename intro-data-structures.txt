1. A line of people at an amusement park ride.

The line is composed of members, represented as strings.
There is a front to the line, as well as a back.
When someone enters the line, place them at the end.
People may leave the line whenever they see fit, and those
behind them take their place.
Given the above real-world information, use an array data 
structure to code the following solution.

a) Use an array input: ["Vivian", "Ava", "Josh", "Patrick", 
"Mike"]

var arr = ["Vivian", "Ava", "Josh", "Patrick", "Mike"];
console.log(arr);

b) Insert a new person, "Mary" at the end of the line. In 
other words, you should insert Mary after Mike.

var arr = ["Vivian", "Ava", "Josh", "Patrick", "Mike"];
arr.push("Mary");
console.log(arr);

c) Find a person in line named "Josh." This function should 
return the position of 2 in the array, (recall that arrays are 
0-based).

var arr = ["Vivian", "Ava", "Josh", "Patrick", "Mike", "Mary"];
for(var i = 0; i < arr.length; i++) {
    if (arr[i] === "Josh") {
        console.log(i);
    }
}

or 
var arr = ["Vivian", "Ava", "Josh", "Patrick", "Mike", "Mary"];
    arr.indexOf("Josh");

d) Find a person in line named "Emily." What should your 
function return if it does not find the item in the array?

var arr = ["Vivian", "Ava", "Josh", "Patrick", "Mike", "Mary"];
for(var i = 0; i < arr.length; i++) {
    if (arr.includes("Emily")) {
        console.log("We found Emily");
    } else {
        console.log("We can't find Emily");
    }
}

or 

var arr = ["Vivian", "Ava", "Josh", "Patrick", "Mike", "Mary"];
    arr.indexOf("Emily") //will return -1

e) What if Ava wants to allow a friend, "Melissa", to cut in 
line in front of her? How would you code this so Melissa 
appears before Ava?

var arr = ["Vivian", "Ava", "Josh", "Patrick", "Mike", "Mary"];
    arr.splice(1,0,"Melissa");
    console.log(arr);

f) If Patrick wants to leave the line, how would you delete 
him from the array?

var arr = ["Vivian", "Ava", "Josh", "Patrick", "Mike", "Mary"];
    arr.splice(3,1);
    console.log(arr);

2. Provide another real-world example that you can model using 
a data structure.

You could you use attendees to a classroom as a real-world
example for a data structure. You don't know exactly who will
be attending a classroom each week and you could add and subtract
attendees as needed.

3. How would your data structure allow developers to access 
and manipulate the data?

As shown above you would be able to add and delete attendees
or even rearrange them as needed.